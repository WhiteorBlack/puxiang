package com.puxiang.mall.module.shop.viewModel;

import android.databinding.BaseObservable;
import android.databinding.Bindable;
import android.os.Bundle;
import android.support.v7.widget.RecyclerView;
import android.view.View;

import com.chad.library.adapter.base.BaseQuickAdapter;
import com.chad.library.adapter.base.listener.OnItemClickListener;
import com.puxiang.mall.model.data.RxArea;
import com.puxiang.mall.model.data.RxLocation;
import com.puxiang.mall.module.shop.adapter.CityListAdapter;
import com.puxiang.mall.module.shop.adapter.CityListLeftAdapter;
import com.puxiang.mall.module.shop.dialog.CityDialog;
import com.puxiang.mall.mvvm.base.ViewModel;
import com.puxiang.mall.network.NetworkSubscriber;
import com.puxiang.mall.network.retrofit.ApiWrapper;

import org.greenrobot.eventbus.EventBus;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by zhaoyong bai on 2017/10/13.
 */

public class CityViewModel extends BaseObservable implements ViewModel {

    private List<RxLocation> catalogList = new ArrayList<>();
    private Map<String, List<RxArea>> dataMap = new HashMap<>();
    private CityListAdapter adapter;
    private CityListLeftAdapter leftAdapter;
    private CityDialog dialog;

    public CityViewModel(CityListAdapter adapter, CityListLeftAdapter leftAdapter,CityDialog dialog) {
        this.adapter = adapter;
        this.leftAdapter = leftAdapter;
        this.dialog=dialog;
    }


    @Bindable
    public List<RxLocation> getCatalogList() {
        return this.catalogList;
    }

    public void getLocation(String lat, String lng) {
        if (catalogList!=null&&catalogList.size()>0){
            return;
        }
        ApiWrapper.getInstance()
                .getLocation(lat, lng)
                .subscribe(new NetworkSubscriber<List<RxLocation>>() {
                    @Override
                    public void onSuccess(List<RxLocation> data) {

                    }
                });
        List<RxArea> areaList = new ArrayList<>();
        for (int i = 0; i < 10; i++) {
            RxLocation location = new RxLocation();
            location.setCity("测试" + i);
            location.setIsVisiable(true);
            catalogList.add(location);
            RxArea rxArea = new RxArea();
            rxArea.setAreaName("测试" + i);
            areaList.add(rxArea);
        }
        catalogList.get(0).setIsVisiable(false);
        adapter.setNewData(areaList);
        leftAdapter.setNewData(catalogList);
    }

    public RecyclerView.OnItemTouchListener areaListener() {
        return new OnItemClickListener() {
            @Override
            public void onSimpleItemClick(BaseQuickAdapter adapter, View view, int position) {
                RxArea rxArea= (RxArea) adapter.getData().get(position);
                Bundle bundle=new Bundle();
                bundle.putInt("type",0);
                bundle.putString("content",rxArea.getAreaName());
                bundle.putString("code",rxArea.getAreaCode());
                EventBus.getDefault().post(bundle);
                dialog.dismiss();
            }
        };
    }

    public RecyclerView.OnItemTouchListener cityListener() {
        return new OnItemClickListener() {
            @Override
            public void onSimpleItemClick(BaseQuickAdapter adapter, View view, int position) {
                for (int i = 0; i < catalogList.size(); i++) {
                   catalogList.get(i).setIsVisiable(i!=position);
                }
                leftAdapter.notifyDataSetChanged();
            }
        };
    }

    @Override
    public void destroy() {

    }
}
