<?xml version="1.0" encoding="utf-8"?>
<resources>

    <!-- require boolean value to decide whether requestFocus for view. -->
    <attr name="requestFocus" format="boolean" />
    <!-- require ItemView {@link me.tatarka.bindingcollectionadapter.ItemView} or ItemViewSelector {{@link me.tatarka.bindingcollectionadapter.ItemViewSelector}.} -->
    <attr name="itemView" format="reference" />
    <!-- require List<ViewModel> bind to ItemView to presentation.-->
    <attr name="items" format="reference" />
    <!-- require a adapter which type of BindingRecyclerViewAdapter<T> to AdapterView-->
    <attr name="adapter" format="reference" />

    <attr name="onScrollChangeCommand" format="reference" />
    <attr name="onScrollStateChangedCommand" format="reference" />
    <attr name="uri" format="string" />
    <attr name="onTouchCommand" format="reference" />

    <!-- require ReplyCommand {@link com.kelin.mvvmlight.command.ReplyCommand } to deal with view click event. -->
    <attr name="clickCommand" format="reference" />
    <!-- require ReplyCommand<Boolean> {@link com.kelin.mvvmlight.command.ReplyCommand } to deal with view focus change event.
     ReplyCommand would has params which means if view hasFocus.-->
    <attr name="onFocusChangeCommand" format="reference" />

    <declare-styleable name="View">

        <!-- require ReplyCommand {@link com.kelin.mvvmlight.command.ReplyCommand } to deal with view click event. -->
        <attr name="clickCommand" />
        <!-- require ReplyCommand<Boolean> {@link com.kelin.mvvmlight.command.ReplyCommand } to deal with view focus change event.
         ReplyCommand would has params which means if view hasFocus.-->
        <attr name="onFocusChangeCommand" />
        <!-- require ReplyCommand<MotionEvent> -->
        <attr name="onTouchCommand" />
    </declare-styleable>



    <declare-styleable name="AdapterView">
        <!-- require ItemView {@link me.tatarka.bindingcollectionadapter.ItemView} or ItemViewSelector {{@link me.tatarka.bindingcollectionadapter.ItemViewSelector}.} -->
        <attr name="itemView" />
        <!-- require List<ViewModel> bind to ItemView to presentation.-->
        <attr name="items" />
        <!-- require a adapter which type of BindingRecyclerViewAdapter<T> to AdapterView-->
        <attr name="adapter" />
        <attr name="dropDownItemView" format="reference" />
        <attr name="itemIds" format="reference" />
        <attr name="itemIsEnabled" format="reference" />
        <!-- require ReplyCommand<Integer> -->
        <attr name="onScrollStateChangedCommand" />
        <!-- require ReplyCommand<ListViewScrollDataWrapper> -->
        <attr name="onScrollChangeCommand" />
        <!-- require ReplyCommand<Integer> count of list items-->
        <attr name="onLoadMoreCommand" format="reference" />


    </declare-styleable>

    <declare-styleable name="TextView">
        <attr name="clickCommand" />
        <!-- require boolean value to decide whether requestFocus for view. -->
        <attr name="requestFocus" />
        <!--require ReplyCommand<TextChangeDataWrapper> -->
        <attr name="beforeTextChangedCommand" format="reference" />
        <!--require ReplyCommand<TextChangeDataWrapper> -->
        <attr name="onTextChangedCommand" format="reference" />
        <!--require ReplyCommand<String> -->
        <attr name="afterTextChangedCommand" format="reference" />
    </declare-styleable>


    <declare-styleable name="ImageView">
        <attr name="clickCommand" />
        <!--  load bitmap from uri(string type) -->
        <attr name="uri" />
        <!--width for ResizeOptions (use Fresco to load bitmap). -->
        <attr name="iv_request_width" format="integer" />
        <!--height for ResizeOptions (use Fresco to load bitmap). -->
        <attr name="iv_request_height" format="integer" />
        <attr name="placeholderImageRes" format="reference|color" />
        <!--  require ReplyCommand<Bitmap> See {@link @link com.kelin.mvvmlight.command.ReplyCommand} -->
        <attr name="onSuccessCommand" format="reference" />
        <!--require ReplyCommand<CloseableReference<CloseableImage>> See {@link com.kelin.mvvmlight.command.ReplyCommand} -->
        <attr name="onFailureCommand" format="reference" />

    </declare-styleable>

    <declare-styleable name="ViewGroup">
        <attr name="clickCommand" />
        <!-- require ItemView {@link me.tatarka.bindingcollectionadapter.ItemView} or ItemViewSelector {{@link me.tatarka.bindingcollectionadapter.ItemViewSelector}.} -->
        <attr name="itemView" />
        <!-- require List<ViewModel> bind to ItemView to presentation.-->
        <attr name="viewModels" format="reference" />

    </declare-styleable>

    <declare-styleable name="RecyclerView" parent="AdapterView">

    </declare-styleable>

    <declare-styleable name="ListView" parent="AdapterView">
        <!--require ReplyCommand<Integer> integer mean to position where is clicked! -->
        <attr name="onItemClickCommand" format="reference" />
    </declare-styleable>

    <declare-styleable name="ViewPager">
        <!-- require ItemView {@link me.tatarka.bindingcollectionadapter.ItemView} or ItemViewSelector {{@link me.tatarka.bindingcollectionadapter.ItemViewSelector}.} -->
        <attr name="itemView" />
        <!-- require List<ViewModel> bind to ItemView to presentation.-->
        <attr name="items" />
        <!-- require a adapter which type of BindingRecyclerViewAdapter<T> to AdapterView-->
        <attr name="adapter" />
        <!-- require PageTitles<T>-->
        <attr name="pageTitles" format="reference" />
        <!--require ReplyCommand<ViewPagerDataWrapper> -->
        <attr name="onPageScrolledCommand" format="reference" />
        <!--require ReplyCommand<Integer> -->
        <attr name="onPageSelectedCommand" format="reference" />
        <!--require ReplyCommand<Integer> -->
        <attr name="onPageScrollStateChangedCommand" format="reference" />

    </declare-styleable>

    <declare-styleable name="NestedScrollView">
        <!-- require ReplyCommand<NestScrollDataWrapper> -->
        <attr name="onScrollChangeCommand" />
    </declare-styleable>


    <declare-styleable name="ScrollView">
        <!-- require ReplyCommand<ScrollDataWrapper> -->
        <attr name="onScrollChangeCommand" />
    </declare-styleable>

    <declare-styleable name="SwipeRefreshLayout">
        <!-- require RelayCommand -->
        <attr name="onRefreshCommand" format="reference" />
    </declare-styleable>

    <declare-styleable name="WebView">
        <!-- require String render to html show in webview-->
        <attr name="render" format="string" />
    </declare-styleable>


    <declare-styleable name="SimpleDraweeView">
        <attr name="url" format="string" />
        <attr name="type" format="integer" />
        <attr name="request_height" format="integer" />
        <attr name="request_width" format="integer" />
        <attr name="defaultUri" format="string"/>
    </declare-styleable>

    <declare-styleable name="VTabLayout">
        <attr name="vindicator_color" format="color" />
        <attr name="vindicator_width" format="dimension" />
        <attr name="vindicator_corners" format="dimension" />
        <attr name="vindicator_gravity" format="enum">
            <enum name="left" value="3" />
            <enum name="right" value="5" />
            <enum name="fill" value="119" />
        </attr>
        <attr name="vtab_margin" format="dimension" />
        <attr name="vtab_mode" format="enum">
            <enum name="fixed" value="10" />
            <enum name="scrollable" value="11" />
        </attr>
        <attr name="vtab_height" format="dimension"></attr>
    </declare-styleable>

    <attr name="indicator_style" />

    <attr name="indicator_width" format="dimension" />
    <attr name="indicator_height" format="dimension" />
    <attr name="indicator_margin" format="dimension" />
    <attr name="indicator_gravity">
        <enum name="CENTER" value="17" />
        <enum name="LEFT" value="3" />
        <enum name="RIGHT" value="5" />
    </attr>
    <attr name="indicator_moving_background" format="reference|color" />
    <attr name="indicator_background" format="reference|color" />
    <attr name="indicator_isSnap" format="boolean" />

    <attr name="indicator_moving_src" format="reference|color" />
    <attr name="indicator_src" format="reference|color" />

    <declare-styleable name="BaseIndicator">
        <attr name="indicator_width" />
        <attr name="indicator_height" />
        <attr name="indicator_margin" />
        <attr name="indicator_gravity" />
        <attr name="indicator_moving_background" />
        <attr name="indicator_background" />
        <attr name="indicator_moving_src" />
        <attr name="indicator_src" />
        <attr name="indicator_isSnap" />
    </declare-styleable>

    <declare-styleable name="PagerIndicator">

        <attr name="visibility" format="enum">
            <enum name="visible" value="0" />
            <enum name="invisible" value="1" />
        </attr>

        <attr name="shape" format="enum">
            <enum name="oval" value="0" />
            <enum name="rect" value="1" />
        </attr>

        <attr name="selected_color" format="color|reference" />
        <attr name="unselected_color" format="color|reference" />

        <attr name="selected_drawable" format="reference" />
        <attr name="unselected_drawable" format="reference" />

        <attr name="selected_width" format="dimension" />
        <attr name="selected_height" format="dimension" />

        <attr name="unselected_width" format="dimension" />
        <attr name="unselected_height" format="dimension" />

        <attr name="padding_left" format="dimension" />
        <attr name="padding_right" format="dimension" />
        <attr name="padding_top" format="dimension" />
        <attr name="padding_bottom" format="dimension" />

        <attr name="selected_padding_left" format="dimension" />
        <attr name="selected_padding_right" format="dimension" />
        <attr name="selected_padding_top" format="dimension" />
        <attr name="selected_padding_bottom" format="dimension" />

        <attr name="unselected_padding_left" format="dimension" />
        <attr name="unselected_padding_right" format="dimension" />
        <attr name="unselected_padding_top" format="dimension" />
        <attr name="unselected_padding_bottom" format="dimension" />

    </declare-styleable>

    <declare-styleable name="CycleView">
        <attr name="myshape" format="enum">
            <enum name="oval" value="0" />
            <enum name="rect" value="1" />
        </attr>

        <attr name="scaleType" format="enum">
            <enum name="centerCrop" value="0" />
            <enum name="fitXY" value="1" />
        </attr>

        <attr name="myselected_color" format="color|reference" />
        <attr name="myunselected_color" format="color|reference" />

        <attr name="myselected_drawable" format="reference" />
        <attr name="myunselected_drawable" format="reference" />
    </declare-styleable>


    <attr name="textwidth" format="integer" />
    <attr name="typeface">
        <enum name="normal" value="0" />
        <enum name="sans" value="1" />
        <enum name="serif" value="2" />
        <enum name="monospace" value="3" />
    </attr>

    <declare-styleable name="CYTextView">
        <attr name="textwidth" />
        <attr name="textSize" format="dimension" />
        <attr name="textColor" format="reference|color" />
        <attr name="lineSpacingExtra" format="dimension" />
        <attr name="typeface" />
    </declare-styleable>


    <declare-styleable name="LoadingView">
        <attr name="loading_renderer">
            <!--circle rotate-->
            <enum name="MaterialLoadingRenderer" value="0" />
            <enum name="LevelLoadingRenderer" value="1" />
            <enum name="WhorlLoadingRenderer" value="2" />
            <enum name="GearLoadingRenderer" value="3" />
            <!--circle jump-->
            <enum name="SwapLoadingRenderer" value="4" />
            <enum name="GuardLoadingRenderer" value="5" />
            <enum name="DanceLoadingRenderer" value="6" />
            <enum name="CollisionLoadingRenderer" value="7" />
            <!--Scenery-->
            <enum name="DayNightLoadingRenderer" value="8" />
            <enum name="ElectricFanLoadingRenderer" value="9" />
            <!--Animal-->
            <enum name="FishLoadingRenderer" value="10" />
            <enum name="GhostsEyeLoadingRenderer" value="11" />
            <!--Goods-->
            <enum name="BalloonLoadingRenderer" value="12" />
            <enum name="WaterBottleLoadingRenderer" value="13" />
            <!--ShapeChange-->
            <enum name="CircleBroodLoadingRenderer" value="14" />
            <enum name="CoolWaitLoadingRenderer" value="15" />
        </attr>
    </declare-styleable>

    <declare-styleable name="Dialog">
        <attr name="DialogTitleAppearance" format="reference" />
        <attr name="DialogTitleText" format="reference|string" />
        <attr name="DialogSpotColor" format="reference|color"/>
        <attr name="DialogSpotCount" format="integer"/>
    </declare-styleable>
</resources>